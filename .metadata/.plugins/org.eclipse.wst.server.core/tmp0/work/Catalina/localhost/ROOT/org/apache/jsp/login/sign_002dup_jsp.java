/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.18
 * Generated at: 2024-06-08 03:47:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.login;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class sign_002dup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>KSW 회원가입</title>\r\n");
      out.write("<!-- 다음 주소 찾기 API -->\r\n");
      out.write("<script	src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<link rel=\"icon\" href=\"/img/favicon.png\" type=\"image/x-icon\"> \r\n");
      out.write("<script src=\"sign-up.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("/* 스타일은 여기에 작성합니다 */\r\n");
      out.write("/* 예시: 폼 스타일 */\r\n");
      out.write("form {\r\n");
      out.write("	margin: 20px auto;\r\n");
      out.write("	width: 300px;\r\n");
      out.write("	border: 1px solid #ccc;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#userid {\r\n");
      out.write("	margin-right: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"text\"], input[type=\"password\"], input[type=\"date\"] {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	border: 1px solid #ccc;\r\n");
      out.write("	border-radius: 3px;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"submit\"] {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	background-color: #007bff;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 3px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"submit\"]:hover {\r\n");
      out.write("	background-color: #0056b3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".error {\r\n");
      out.write("	color: red;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".content {\r\n");
      out.write("	justify-content: space-between;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".input-id {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: row;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn {\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("	background-color: #007bff;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 3px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write(".btn:hover {\r\n");
      out.write("	background-color: #0056b3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#dbchkId {\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("	width: 33%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: inherit;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".password-check {\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write(".email {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: row;\r\n");
      out.write("}\r\n");
      out.write("a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: inherit;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".header-flex {\r\n");
      out.write("   display: flex;\r\n");
      out.write("   flex-direction : row;\r\n");
      out.write("   align-items: center;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("   padding : 10px 30%;\r\n");
      out.write("}\r\n");
      out.write(".header-left {\r\n");
      out.write("   color: #007bff;\r\n");
      out.write("}\r\n");
      out.write(".header-right {\r\n");
      out.write("   display:flex;\r\n");
      out.write("   flex-direction: column;\r\n");
      out.write("   align-items: flex-start;\r\n");
      out.write("   justify-content: space-between;\r\n");
      out.write("   border: 1px #007bff solid;\r\n");
      out.write("   padding: 10px\r\n");
      out.write("}\r\n");
      out.write(".header-menu {\r\n");
      out.write("   display: flex;\r\n");
      out.write("   flex-direction: row;\r\n");
      out.write("   align-content: flex-start;\r\n");
      out.write("   justify-content: space-between;\r\n");
      out.write("   margin-top: 10px;\r\n");
      out.write("}\r\n");
      out.write(".logo {\r\n");
      out.write("    height: 170px;\r\n");
      out.write("    width: 300px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<header>\r\n");
      out.write("		<div class=\"header-flex\">\r\n");
      out.write("		   <div class=\"header-left\">\r\n");
      out.write("		      <h2>\r\n");
      out.write("		         <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/main/main-page.bo\"><img class=\"logo\" alt=\"메인페이지로 이동\" src=\"../img/ksw.png\"></a>\r\n");
      out.write("		      </h2>\r\n");
      out.write("		   </div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</header>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	");

        String errorMessage = (String) request.getAttribute("errorMessage");
        if (errorMessage != null) {
    
      out.write("\r\n");
      out.write("    <div style=\"color: red; text-align: center; margin-bottom: 10px;\">\r\n");
      out.write("        ");
      out.print( errorMessage );
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    ");

        }
    
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<form id=\"signForm\" name=\"joinForm\"\r\n");
      out.write("    action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login/Sign-Up.bo\"\r\n");
      out.write("    method=\"post\">\r\n");
      out.write("		<div class=\"content\">\r\n");
      out.write("			<div>\r\n");
      out.write("				<h3 style=\"text-align: center;\">KSW 회원가입</h3>\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- 사용자 아이디 작성 -->\r\n");
      out.write("			<div class=\"input-id\">\r\n");
      out.write("				<input type=\"text\" id=\"userid\" name=\"userid\" maxlength= \"16\" placeholder=\"사용자 아이디(5자 이상,16자 미만)\">\r\n");
      out.write("				<button style=\"width: 33%;\" class=\"btn\" type=\"button\"  name=\"idcheck\"\r\n");
      out.write("					onclick=\"CheckId(joinForm.userid.value)\">중복확인</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			<span id = \"idcheck\"></span>\r\n");
      out.write("			<input type=\"hidden\" name=\"dbchkId\" value=\"dbchkId\" />\r\n");
      out.write("\r\n");
      out.write("			<!-- 사용자 이메일 작성 -->\r\n");
      out.write("			<div class=\"email\">\r\n");
      out.write("				<input type=\"text\" id=\"useremail1\" name=\"useremail1\"\r\n");
      out.write("				placeholder=\"사용자 이메일\" required>\r\n");
      out.write("				<span>@</span>\r\n");
      out.write("				<select id=\"useremail2\" name=\"useremail2\" style=\"margin-bottom: 10px; padding: 10px;\">\r\n");
      out.write("					<option value=\"gmail.com\" >gmail.com</option>\r\n");
      out.write("					<option value=\"naver.com\">naver.com</option>\r\n");
      out.write("				</select>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<!-- 사용자 비밀번호 작성 -->\r\n");
      out.write("			<input type=\"password\" id=\"password\" name=\"password\"\r\n");
      out.write("				placeholder=\"비밀번호\" required> <input type=\"password\"\r\n");
      out.write("				id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"비밀번호 확인\"\r\n");
      out.write("				onkeyup=\"checkPassword()\" required> <span\r\n");
      out.write("				id=\"passwordMessage\" class=\"error\"></span>\r\n");
      out.write("\r\n");
      out.write("			<!-- 사용자 이름 작성 -->\r\n");
      out.write("			<input type=\"text\" id=\"username\" name=\"username\" placeholder=\"사용자 이름\"\r\n");
      out.write("				required>\r\n");
      out.write("\r\n");
      out.write("			<!-- 사용자 생일 작성 -->\r\n");
      out.write("			<input type=\"date\" id=\"userbirth\" name=\"userbirth\"\r\n");
      out.write("				placeholder=\"사용자 생일\" required>\r\n");
      out.write("\r\n");
      out.write("			<!-- 사용자 전화번호 작성 -->\r\n");
      out.write("			<input type=\"text\" id=\"userphone\" name=\"userphone\" placeholder=\"전화번호\"\r\n");
      out.write("				maxlength=\"11\">\r\n");
      out.write("\r\n");
      out.write("			<!-- 사용자 주소 작성 -->\r\n");
      out.write("			<button type=\"button\" class=\"btn btn-outline-secondary findbtn\"\r\n");
      out.write("				onclick=\"sample4_execDaumPostcode()\">주소 찾기</button>\r\n");
      out.write("			<input style=\"background-color: #f5f5f5;\" type=\"text\" name=\"add1\" id=\"sample4_roadAddress\" placeholder=\"도로명주소\" readonly>\r\n");
      out.write("			<input style=\"background-color: #f5f5f5;\" type=\"text\" name=\"add2\" id=\"sample4_postcode\" placeholder=\"우편번호\" readonly>\r\n");
      out.write("			<span id=\"guide\" style=\"color: #999; display: none\"></span>\r\n");
      out.write("			<input type=\"text\" name=\"add3\" id=\"sample4_detailAddress\" placeholder=\"상세주소\">\r\n");
      out.write("			<button class='btn' type=\"button\" id=\"signup\" name=\"signup\">회원가입</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
